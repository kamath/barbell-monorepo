// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Environment {
    name             String             @id
    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt
    GarageLastOpened GarageLastOpened[]
    GateLastOpened   GateLastOpened[]
    EndpointHit      EndpointHit[]
}

model GarageLastOpened {
    id            String      @id @default(uuid())
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    userId        String
    environment   Environment @relation(fields: [environmentId], references: [name])
    environmentId String      @default("PROD")
}

model GateLastOpened {
    id            String      @id @default(uuid())
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    userId        String
    environment   Environment @relation(fields: [environmentId], references: [name])
    environmentId String      @default("PROD")
}

model EndpointHit {
    id            String      @id @default(uuid())
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    endpoint      String
    body          String
    environment   Environment @relation(fields: [environmentId], references: [name])
    environmentId String      @default("PROD")
}

model ConferenceRoom {
    id        String    @id @default(uuid())
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    name      String
    bookings  Booking[]
}

model Booking {
    id               String          @id @default(uuid())
    createdAt        DateTime        @default(now())
    updatedAt        DateTime        @updatedAt
    startDate        DateTime
    endDate          DateTime
    conferenceRoom   ConferenceRoom? @relation(fields: [conferenceRoomId], references: [id])
    conferenceRoomId String?
}
